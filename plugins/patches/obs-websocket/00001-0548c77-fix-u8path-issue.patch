 src/utils/Json.cpp | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/src/utils/Json.cpp b/src/utils/Json.cpp
index 68f0588..78cb385 100644
--- a/src/utils/Json.cpp
+++ b/src/utils/Json.cpp
@@ -178,7 +178,7 @@ json Utils::Json::ObsDataToJson(obs_data_t *d, bool includeDefault)
 
 bool Utils::Json::GetJsonFileContent(std::string fileName, json &content)
 {
-	std::ifstream f(fileName);
+	std::ifstream f(std::filesystem::u8path(fileName));
 	if (!f.is_open())
 		return false;
 
@@ -195,9 +195,10 @@ bool Utils::Json::GetJsonFileContent(std::string fileName, json &content)
 
 bool Utils::Json::SetJsonFileContent(std::string fileName, const json &content, bool makeDirs)
 {
+	try{
 	if (makeDirs) {
 		std::error_code ec;
-		auto p = std::filesystem::path(fileName).parent_path();
+		auto p = std::filesystem::u8path(fileName).parent_path();
 		if (!ec && !std::filesystem::exists(p, ec))
 			std::filesystem::create_directories(p, ec);
 		if (ec) {
@@ -207,7 +208,7 @@ bool Utils::Json::SetJsonFileContent(std::string fileName, const json &content,
 		}
 	}
 
-	std::ofstream f(fileName);
+	std::ofstream f(std::filesystem::u8path(fileName));
 	if (!f.is_open()) {
 		blog(LOG_ERROR, "[Utils::Json::SetJsonFileContent] Failed to open file `%s` for writing", fileName.c_str());
 		return false;
@@ -215,6 +216,13 @@ bool Utils::Json::SetJsonFileContent(std::string fileName, const json &content,
 
 	// Set indent to 2 spaces, then dump content
 	f << std::setw(2) << content;
+	}catch(std::exception &e){
+		blog(LOG_ERROR, "[Utils::Json::SetJsonFileContent] Exception occured while SetJsonFileContent: %s", e.what());
+		return false;
+	}catch(...){
+		blog(LOG_ERROR, "[Utils::Json::SetJsonFileContent] Exception occured while SetJsonFileContent.");
+		return false;
+	}
 
 	return true;
 }
